require('dotenv').config();
const { ethers } = require('ethers');

async function testSetup() {
    console.log('üöÄ Iniciando verificaci√≥n del setup...\n');

    try {
        // Configurar provider
        const provider = new ethers.JsonRpcProvider(process.env.NETWORK_RPC_URL);
        
        // Verificar conexi√≥n a la red
        console.log('üì° Verificando conexi√≥n a Moonbase Alpha...');
        const network = await provider.getNetwork();
        console.log(`‚úÖ Conectado a: ${network.name} (Chain ID: ${network.chainId})\n`);

        // Verificar cuentas y balances
        const accounts = [
            { name: '√ÅRBITRO', address: process.env.ARBITRO_ADDRESS, key: process.env.ARBITRO_PRIVATE_KEY },
            { name: 'EMPRESA1', address: process.env.EMPRESA1_ADDRESS, key: process.env.EMPRESA1_PRIVATE_KEY },
            { name: 'EMPRESA2', address: process.env.EMPRESA2_ADDRESS, key: process.env.EMPRESA2_PRIVATE_KEY }
        ];

        console.log('üë• Verificando cuentas configuradas:\n');

        for (const account of accounts) {
            try {
                console.log(`--- ${account.name} ---`);
                console.log(`Direcci√≥n: ${account.address}`);
                
                // Verificar que la clave privada corresponde a la direcci√≥n
                const wallet = new ethers.Wallet(account.key);
                if (wallet.address.toLowerCase() === account.address.toLowerCase()) {
                    console.log('‚úÖ Clave privada v√°lida');
                } else {
                    console.log('‚ùå ERROR: Clave privada no coincide con la direcci√≥n');
                }

                // Verificar balance
                const balance = await provider.getBalance(account.address);
                const balanceInDev = ethers.formatEther(balance);
                console.log(`Balance: ${balanceInDev} DEV`);
                
                if (parseFloat(balanceInDev) > 0) {
                    console.log('‚úÖ Tiene fondos suficientes');
                } else {
                    console.log('‚ö†Ô∏è  ADVERTENCIA: Sin fondos - visita el faucet');
                }
                
                console.log('');
            } catch (error) {
                console.log(`‚ùå ERROR verificando ${account.name}: ${error.message}\n`);
            }
        }

        // Verificar configuraci√≥n del puerto
        console.log('‚öôÔ∏è  Configuraci√≥n del servidor:');
        console.log(`Puerto: ${process.env.PORT || 3000}`);
        console.log(`RPC URL: ${process.env.NETWORK_RPC_URL}`);
        console.log(`Chain ID: ${process.env.CHAIN_ID}\n`);

        console.log('üéâ ¬°Verificaci√≥n completada!');
        
    } catch (error) {
        console.error('‚ùå Error durante la verificaci√≥n:', error.message);
        process.exit(1);
    }
}

testSetup();
